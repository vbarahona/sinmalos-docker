#############################################################################
# SinMalos syslog-ng.conf file which collects and parse panos and fortios
# firewall logs and send them to minemeld by HTTP POST
#
# Touch with care and only if you know what are you doing.
#
#  docker run ...  -v "$PWD/syslog-ng.conf":/etc/syslog-ng/syslog-ng.conf
#

@version: 3.38
@include "scl.conf"

source s_network {
        default-network-drivers(
        	flags(store-raw-message)
        );
};

#source s_panosonly { tcp(port(5140) flags(no-parse,store-raw-message)); };

template t_jsonfile {
    template("$(format-json --scope rfc5424 --scope dot-nv-pairs
        --rekey .* --shift 1 --scope nv-pairs --key ISODATE)\n\n");
};

#parser p_panos { panos-parser(); };

destination d_http_pa {
    http(
        url("https://sinmalos-mm:443/config/data/PA2SinMalos_indicators/append?h=PA2SinMalos&t=localdb")
        tls(
            peer-verify(no)
        )
        method("POST")
        user-agent("syslog-ng User Agent")
        user("sinmalos")
        password("cambiamelapass")
        headers("Content-type: application/json")
        body('{"type":"IPv4","indicator":"${.panos.src}","comment":"${.panos.threatid}","share_level":"green","ttl":86400}')
        persist-name("http_pa")
    );
};

destination d_http_forti {
    http(
        url("https://sinmalos-mm:443/config/data/PA2SinMalos_indicators/append?h=PA2SinMalos&t=localdb")
        tls(
            peer-verify(no)
        )
        method("POST")
        user-agent("syslog-ng User Agent")
        user("sinmalos")
        password("cambiamelapass")
        headers("Content-type: application/json")
        body('{"type":"IPv4","indicator":"${.fortigate.srcip}","comment":"${.fortigate.attack}","share_level":"green","ttl":86400}')
        persist-name("http_forti")
    );
};

destination d_raw {
    file("/var/log/raw" template("${RAWMSG}\n"));
};

destination d_other {
    file("/var/log/other");
};

log {
    source(s_network);
    #destination(d_raw);
    if ("${.app.name}" eq "panos") {
        destination(d_http_pa);
    } elif ("${.app.name}" eq "fortigate") {
        destination(d_http_forti);
    } else {
        destination(d_other);
    };
};

#log {
#    source(s_panosonly);
#    parser(p_panos);
#    destination(d_http);
#};